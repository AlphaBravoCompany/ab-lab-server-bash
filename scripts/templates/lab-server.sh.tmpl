#!/bin/bash

set -e
G="\e[32m"
E="\e[0m"

if ! grep -q 'Ubuntu' /etc/issue
  then
    echo -----------------------------------------------
    echo "Not Ubuntu? Could not find Codename Ubuntu in lsb_release -a. Please switch to Ubuntu."
    echo -----------------------------------------------
    exit 1
fi

## Generate cert with mkcert
mkcert -install
cd /alphabravo/misc/certs
mkcert "*.$lab_server_ip.nip.io"
cd ~
#docker run -v /alphabravo/misc/certs:/certs -e SSL_DNS="*.$lab_server_ip.nip.io" -e SSL_IP="$lab_server_ip" -e SSL_EXPIRE="90" -e SSL_SUBJECT="$lab_server_ip.nip.io" paulczar/omgwtfssl
#sudo cat /alphabravo/misc/certs/cert.pem /alphabravo/misc/certs/ca.pem > /alphabravo/misc/certs/fullchain.pem
sudo cat /alphabravo/misc/certs/_wildcard.$lab_server_ip.nip.io.pem /root/.local/share/mkcert/rootCA.pem /alphabravo/misc/certs/_wildcard.$lab_server_ip.nip.io-key.pem > /alphabravo/misc/certs/fullchain.pem


## Install Code Server
curl -fsSL -o /tmp/code-server_$code_version_amd64.deb https://github.com/coder/code-server/releases/download/v$code_version/code-server_$code_version_amd64.deb
sudo dpkg -i /tmp/code-server_$code_version_amd64.deb
systemctl stop code-server@$USER
rm /lib/systemd/system/code-server@.service
cat >> /lib/systemd/system/code-server@.service<< EOF
[Unit]
Description=code-server
After=network.target

[Service]
User=root
Group=root
Type=exec
Environment=PASSWORD=$code_password
ExecStart=/usr/bin/code-server --bind-addr 0.0.0.0:8080 --user-data-dir /alphabravo/misc/code-server --auth password --cert-host code.$proxy_ip.nip.io --cert /alphabravo/misc/certs/_wildcard.$proxy_ip.nip.io.pem --cert-key /alphabravo/misc/certs/_wildcard.$proxy_ip.nip.io-key.pem /alphabravo
Restart=always
User=%i

[Install]
WantedBy=default.target
EOF
sudo systemctl enable --now code-server@$USER

## Install codelab extension
FILE=/alphabravo/misc/code-server/extensions/codelab/codelab-0.0.1.vsix
if [ -f "$FILE" ]; then
    echo "$FILE exists. No need to install CodeLab again."
else 
    echo "$FILE does not exist. Installing Codelab."
    unzip /alphabravo/misc/code-server/codelab.zip -d /alphabravo/misc/code-server/extensions
    sudo systemctl restart code-server@$USER
fi

## Install K3s binary
echo "Installing K3s..."
curl -fsSL -o k3s https://github.com/k3s-io/k3s/releases/download/$k3s_version/k3s
chmod +x k3s
sudo mv k3s /usr/local/bin

## Install RKE2 binary
echo "Installing RKE2..."
curl -fsSL -o rke2 https://github.com/rancher/rke2/releases/download/$rke2_version/rke2.linux-amd64
chmod +x rke2
sudo mv rke2 /usr/local/bin

## Install k3d binary
echo "Installing K3d..."
wget -q -O - https://raw.githubusercontent.com/k3d-io/k3d/main/install.sh | TAG=$k3d_version bash

## Install RKE binary
echo "Installing RKE..."
curl -fsSL -o rke https://github.com/rancher/rke/releases/download/$rke_version/rke_linux-amd64
chmod +x rke
sudo mv rke /usr/local/bin

## Install Helm
echo "Installing Helm..."
curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3  > /dev/null 2>&1
chmod 700 get_helm.sh  > /dev/null 2>&1
./get_helm.sh  > /dev/null 2>&1
rm ./get_helm.sh  > /dev/null 2>&1

## Install Kubectl
echo "Installing kubectl..."
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

## Run Rancher container
docker-compose -f /alphabravo/misc/rancher/docker-compose.yaml up -d  > /dev/null 2>&1

## Run Rancher container
docker-compose -f /alphabravo/misc/portainer/docker-compose.yaml up -d  > /dev/null 2>&1

## Load Labs
git clone --depth 1 $public_labs_repo /alphabravo/labs/public  > /dev/null 2>&1

## Replace LABSERVERNAME with actual host DNS name
find /alphabravo/labs/ -name '*.md' -exec sed -i -e 's/LABSERVERNAME/$lab_server_ip.nip.io/g' {} \;
find /alphabravo/labs/ -name '*.yaml' -exec sed -i -e 's/LABSERVERNAME/$lab_server_ip.nip.io/g' {} \;
find /alphabravo/labs/ -name '*.yml' -exec sed -i -e 's/LABSERVERNAME/$lab_server_ip.nip.io/g' {} \;